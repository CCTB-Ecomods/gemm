defaultSettings()
disperse!(world::Array{Patch,1})
establish!(patch::Patch)
establish!(world::Array{Patch,1})
isviable(ind::Individual)
checkviability!(world::Array{Patch,1})
traitsexist(traits::Dict{String, Float64})
gausscurve(b, c, x, a = 1
findisland(world::Array{Patch,1})
checkborderconditions(world::Array{Patch,1}, xdest::Int, ydest::Int)
meiosis(genome::Array{Chromosome,1}, maternal::Bool, heterozygosity::Bool)
gettraitdict(chrms::Array{Chromosome, 1}, traitnames::Array{String, 1})
gettraitdictfast(chrms::Array{Chromosome, 1}, traitnames::Array{String, 1})
getseqsimilarity(indgene::AbstractString, mategene::AbstractString)
getseqs(genome::Array{Chromosome, 1}, traitname::String)
iscompatible(mate::Individual, ind::Individual)
seq2num(sequence::String)
intseq(n::Int)
seq2bignum(sequence::String)
num2seq(n::Integer)
createtraits()
creategenes(ngenes::Int, traits::Array{Trait,1})
createcompatgene(bases::Array{Char,1}, compatidx::Int)::AbstractGene
createchrms(nchrms::Int,genes::Array{AbstractGene,1},lineage::String)::Array{Chromosome,1}
varyalleles!(genes::Array{AbstractGene, 1}, locivar::Float64)
varyalleles!(chrms::Array{Chromosome, 1}, locivar::Float64)
mutate!(traits::Array{Trait, 1}, locivar::Float64 = 1
mutate!(ind::Individual, temp::Float64)
mutate!(patch::Patch)
mutate!(world::Array{Patch, 1})
changetemp!(world::Array{Patch,1}, sdtemp::Float64)
changeprec!(world::Array{Patch,1}, sdprec::Float64)
changehabitat!(world::Array{Patch,1})
markthem!(community::Array{Individual, 1})
markthem!(habitat::Patch)
markthem!(world::Array{Patch, 1})
createpop(cellsize::Float64)
createind(marked::Bool = false)
genesis(cellsize::Float64)
createpatch(patchentry::Array{String,1})
createworld(maptable::Array{Array{String,1},1})
updateworld(oldworld::Array{Patch,1}, maptable::Array{Array{String,1},1})
getsettings(configfile::String = "", seed::Integer = 0)
parsecommandline()
basicparser(filename::String)
parseconfig(configfilename::String)
readmapfile(mapfilename::String)
initglobalspeciespool!()
invade!(patch::Patch, pressure::Int)
disturb!(patch::Patch, intensity::Int)
disturb!(world::Array{Patch,1})
printheader(io::IO = stdout, sep::String = "\t")
dumpinds(world::Array{Patch, 1}, timestep::Int, io::IO = stdout, sep::String = "\t")
makefasta(world::Array{Patch, 1}, io::IO = stdout, onlyisland::Bool = false, sep::String = "_")
setupdatadir()
writesettings()
writedata(world::Array{Patch,1}, timestep::Int)
recordstatistics(world::Array{Patch,1})
recordlineages(world::Array{Patch,1}, timestep::Int)
printpopheader(io::IO)
printpopstats(io::IO, world::Array{Patch, 1}, timestep::Integer)
simlog(msg::String, category::Char='i', logfile::String="simulation
logprint(msg::String, tostderr=false)
diversity(world::Array{Patch,1})
shannon(index::Dict{String,Int})
heterozygosity(population::Array{Individual,1})
freespace(world::Array{Patch,1})
idstring(ind::Individual)
reproduce!(patch::Patch) #TODO: refactor!
greproduce!(patch::Patch)
reproduce!(world::Array{Patch,1})
findmate(population::AbstractArray{Individual, 1}, ind::Individual)
createoffspring(noffs::Integer, ind::Individual, partner::Individual, dimorphism::Bool=false)
runsim(config::String = "", seed::Integer = 0)
rungemm(config::String = "", seed::Integer = 0)
correctmode!()
simulate!(world::Array{Patch,1}, timesteps::Int=1000, timeoffset::Int = 0)
defaultexperiment(world::Array{Patch,1})
invasionexperiment(world::Array{Patch,1}, t::Int)
zosteropsexperiment(world::Array{Patch,1})
survive!(patch::Patch)
survive!(world::Array{Patch,1})
grow!(patch::Patch, growthrate::Float64, capgrowth::Bool)
grow!(world::Array{Patch,1})
compete!(patch::Patch)
compete!(world::Array{Patch,1})
initzosteropsspecies()
initzosteropsspecies(spectraits::Dict{String,Any})
zgenesis(patch::Patch)
zdisperse!(world::Array{Patch,1})
zdisperse!(bird::Individual, patch::Patch, world::Array{Patch,1})
zfindmate(population::AbstractArray{Individual, 1}, bird::Individual)
ziscompatible(i1::Individual, i2::Individual)
zreproduce!(patch::Patch)
findneighbours!(world::Array{Patch,1})
