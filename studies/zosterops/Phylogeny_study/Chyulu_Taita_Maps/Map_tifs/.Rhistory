scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
Optimumplot_eco
Popspec_eco13%>%
ggplot(aes(time, precoptmean))+
geom_jitter(aes(color= prec), size=0.5)+
ylab("forest cover optimum")+
labs(color="forest cover")+
ggtitle("Ecological")+
scale_color_gradientn(colours=rev(terrain.colors(100)))
Popspec_eco14 <- read.delim("~/Zosterops/gemm/results/Traitspace_exploration/Traitspace_exploration_survive/phyl_ecological_1_Chyulu_025.map_45_20.0/pops.tsv")
View(Popspec_eco14)
Popspec_eco14%>%
ggplot(aes(time, precoptmean))+
geom_jitter(aes(color= prec), size=0.5)+
ylab("forest cover optimum")+
labs(color="forest cover")+
ggtitle("Ecological")+
scale_color_gradientn(colours=rev(terrain.colors(100)))
Popspec_eco14%>%
ggplot(aes(time, prectolmean))+
geom_jitter(aes(color= prec), size=0.5)+
ylab("forest cover tolerance")+
#ylim(c(0,100))+
labs(color="forest cover")+
ggtitle("Ecological")+
scale_color_gradientn(colours=rev(terrain.colors(100)))
Optimumplot_eco=
Popspec_eco14 %>%
filter(time==5000)%>%
ggplot(aes(x,y, fill= precoptmean))+
geom_tile(show.legend = F)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("ecological")+
labs(fill="forest cover\noptimum")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
Optimumplot_eco
setwd("/home/charlotte/Zosterops/gemm/studies/zosterops/Chyulu_Taita_Maps2/Maps_tif")
setwd("/home/charlotte/Zosterops/gemm/studies/zosterops/Chyulu_Taita_Maps2/Map_tifs")
Chyulu_25=as.data.frame(raster("Chyulu_025.tif"), xy=T)
library(tidyverse)
library(raster)
library(gridExtra)
Chyulu_25=as.data.frame(raster("Chyulu_025.tif"), xy=T)
Chyulu_50=as.data.frame(raster("Chyulu_050.tif"), xy=T)
Chyulu_75=as.data.frame(raster("Chyulu_075.tif"), xy=T)
Chyulu_25=as.data.frame(raster("Chyulu_25.tif"), xy=T)
Chyulu_50=as.data.frame(raster("Chyulu_50.tif"), xy=T)
Chyulu_75=as.data.frame(raster("Chyulu_75.tif"), xy=T)
low_25=low_25=seq(75, 2.5, by= -2.5)
for (i in 1:(length(low_25)-4)){
assign(paste0("Chyulu",low_25[i]*10), as.data.frame(raster(paste0("Chyulu_", low_25[i]*10, ".tif")), xy=T))
}
Chyulu25
Mapplot=
Chyulu_25%>%
ggplot(aes(x,y, fill= Chyulu_225))+
geom_tile(show.legend = F)+
coord_equal()+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("forest cover")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
Mapplot=
Chyulu_25%>%
ggplot(aes(x,y, fill= Chyulu_25))+
geom_tile(show.legend = F)+
coord_equal()+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("forest cover")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
Mapplot
Mapplot1=
Chyulu_25%>%
ggplot(aes(x,y, fill= Chyulu_25))+
geom_tile(show.legend = F)+
coord_equal()+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("forest cover")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
Mapplot1=
Chyulu750%>%
ggplot(aes(x,y, fill= Chyulu_750))+
geom_tile(show.legend = F)+
coord_equal()+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("forest cover")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
Mapplot2=
Chyulu750%>%
ggplot(aes(x,y, fill= Chyulu_750))+
geom_tile(show.legend = F)+
coord_equal()+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("forest cover")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
Mapplot2=
Chyulu_25%>%
ggplot(aes(x,y, fill= Chyulu_25))+
geom_tile(show.legend = F)+
coord_equal()+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("forest cover")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
Mapplot1=
Chyulu_25%>%
ggplot(aes(x,y, fill= Chyulu_25))+
geom_tile(show.legend = F)+
coord_equal()+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("forest cover")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
Mapplot2=
Chyulu750%>%
ggplot(aes(x,y, fill= Chyulu_750))+
geom_tile(show.legend = F)+
coord_equal()+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("forest cover")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
grid.arrange(Mapplot1, Mapplot2, nrow=1)
Mapplot1=
Chyulu_25%>%
ggplot(aes(x,y, fill= Chyulu_25))+
geom_tile(show.legend = F)+
coord_equal()+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("first map")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
grid.arrange(Mapplot1, Mapplot2, nrow=1)
#plots of temperature niche - optimum and tolerance
Popspec_eco%>%
ggplot(aes(time,dispshapemean))+
geom_jitter(aes(color= prec), size=0.5)+
ylim(c(0,2000))+
ylab("Mean dispersal distance")+
labs(color="forest cover")+
ggtitle("Ecological")+
scale_color_gradientn(colours=rev(terrain.colors(100)))
Popspec_mut <- read.delim("~/Zosterops/gemm/results/speciation_mut_NewMaps/pops.tsv")
View(Popspec_mut)
Popspec_eco <- read.delim("~/Zosterops/gemm/results/speciation_eco_NewMaps/pops.tsv")
View(Popspec_eco)
#plots of temperature niche - optimum and tolerance
Popspec_eco%>%
ggplot(aes(time,dispshapemean))+
geom_jitter(aes(color= prec), size=0.5)+
ylim(c(0,2000))+
ylab("Mean dispersal distance")+
labs(color="forest cover")+
ggtitle("Ecological")+
scale_color_gradientn(colours=rev(terrain.colors(100)))
#plots of temperature niche - optimum and tolerance
Popspec_eco%>%
ggplot(aes(time,dispshapemean))+
geom_jitter(aes(color= prec), size=0.5)+
ylim(c(0,2000))+
ylab("Mean dispersal shape")+
labs(color="forest cover")+
ggtitle("Ecological")+
scale_color_gradientn(colours=rev(terrain.colors(100)))
#plots of temperature niche - optimum and tolerance
Popspec_eco%>%
ggplot(aes(time,dispshapemean))+
geom_jitter(aes(color= prec), size=0.5)+
#ylim(c(0,2000))+
ylab("Mean dispersal shape")+
labs(color="forest cover")+
ggtitle("Ecological")+
scale_color_gradientn(colours=rev(terrain.colors(100)))
Popspec_mut%>%
ggplot(aes(time,dispshapemean))+
geom_jitter(aes(color= prec), size=0.5)+
#ylim(c(0,2000))+
ylab("Mean dispersal shape")+
labs(color="forest cover")+
ggtitle("Mutation order")+
scale_color_gradientn(colours=rev(terrain.colors(100)))
Dispdistance_mut=
Popspec_mut %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= dispmeanmean))+
geom_tile(show.legend = T)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("mutation order")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)))
time_interest=36000
Dispdistance_mut=
Popspec_mut %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= dispmeanmean))+
geom_tile(show.legend = T)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("mutation order")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)))
Dispdistance_mut
Dispdistance_eco=
Popspec_eco %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= dispmeanmean))+
geom_tile(show.legend = T)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("ecological")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,10))
Dispdistance_eco=
Popspec_eco %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= dispmeanmean))+
geom_tile(show.legend = T)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("ecological")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)))
grid.arrange(Dispdistance_eco, Dispdistance_mut, nrow=1)
range(Popspec_eco$dispmeanmean)
range(Popspec_mut$dispmeanmean)
Dispdistance_mut=
Popspec_mut %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= dispmeanmean))+
geom_tile(show.legend = T)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("mutation order")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,796200))
Dispdistance_eco=
Popspec_eco %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= dispmeanmean))+
geom_tile(show.legend = T)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("ecological")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,796200))
grid.arrange(Dispdistance_eco, Dispdistance_mut, nrow=1)
Dispdistance_mut=
Popspec_mut %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= dispmeanmean))+
geom_tile(show.legend = T)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("mutation order")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)))
Dispdistance_eco=
Popspec_eco %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= dispmeanmean))+
geom_tile(show.legend = T)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("ecological")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)))
grid.arrange(Dispdistance_eco, Dispdistance_mut, nrow=1)
time_interest=1000
Dispdistance_mut=
Popspec_mut %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= dispmeanmean))+
geom_tile(show.legend = T)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("mutation order")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)))
Dispdistance_eco=
Popspec_eco %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= dispmeanmean))+
geom_tile(show.legend = T)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("ecological")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)))
grid.arrange(Dispdistance_eco, Dispdistance_mut, nrow=1)
Dispdistance_eco=
Popspec_eco %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= dispshapemean))+
geom_tile(show.legend = T)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("ecological")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)))
Dispdistance_mut=
Popspec_mut %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= dispshapemean))+
geom_tile(show.legend = T)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("mutation order")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)))
grid.arrange(Dispdistance_eco, Dispdistance_mut, nrow=1)
time_interest=36000
Dispdistance_mut=
Popspec_mut %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= dispshapemean))+
geom_tile(show.legend = T)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("mutation order")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)))
Dispdistance_eco=
Popspec_eco %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= dispshapemean))+
geom_tile(show.legend = T)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("ecological")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)))
grid.arrange(Dispdistance_eco, Dispdistance_mut, nrow=1)
