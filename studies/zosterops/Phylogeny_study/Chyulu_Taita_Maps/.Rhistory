pops <- read.delim("~/Zosterops/gemm/results/taita_test_2/pops.tsv")
View(pops)
library(tidyverse)
library(raster)
library(gridExtra)
Chyulu_25=as.data.frame(raster("Chyulu_25_25.tif"), xy=T)
Chyulu_25=raster("Chyulu_25_25.tif")
setwd("/home/charlotte/Zosterops/gemm/examples/zosterops/Chyulu_Taita_Maps")
Chyulu_25=raster("Chyulu_25_25.tif")
Popspec= pops_s2
Popspec= pops_s2
Popspec= pops
Optimumplot=
Popspec %>%
filter(time==0)%>%
ggplot(aes(x,y, fill= precoptmean))+
geom_tile(show.legend = F)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("forest cover optimum")+
labs(fill="forest cover\noptimum")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
Toleranceplot=
Popspec %>%
filter(time==0)%>%
ggplot(aes(x,y, fill= prectolmean))+
geom_tile(show.legend = F)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("forest cover tolerance")+
labs(fill="forest cover\ntolerance")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
Mapplot=
Chyulu_25%>%
ggplot(aes(x,y, fill= Chyulu_25_25))+
geom_tile(show.legend = T)+
coord_equal()+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("forest cover")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
Chyulu_25=as.data.frame(raster("Chyulu_25_25.tif"), xy=T)
Mapplot=
Chyulu_25%>%
ggplot(aes(x,y, fill= Chyulu_25_25))+
geom_tile(show.legend = T)+
coord_equal()+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("forest cover")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
grid.arrange(Optimumplot, Toleranceplot, Mapplot, nrow=1)
Optimumplot=
Popspec %>%
filter(time==max(time))%>%
ggplot(aes(x,y, fill= precoptmean))+
geom_tile(show.legend = F)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("forest cover optimum")+
labs(fill="forest cover\noptimum")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
Toleranceplot=
Popspec %>%
filter(time==max(time))%>%
ggplot(aes(x,y, fill= prectolmean))+
geom_tile(show.legend = F)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("forest cover tolerance")+
labs(fill="forest cover\ntolerance")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
grid.arrange(Optimumplot, Toleranceplot, Mapplot, nrow=1)
max(Popspec$time)
