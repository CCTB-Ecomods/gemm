carrying_capacity_raster= round(K* (Taita_Chyulu/100))
cellStats(carrying_capacity_raster, sum)
#Map of just the Chyuluy hills. Note that the cut-off was arbitrarily chosen and does not represent any political / geological area.
Chyulu=raster("Chyulu_cut.tif")
plot(Chyulu)
#This map will now be flattened step by step - in 10%, 5% and 2.5% steps down to 10%, 5% and 2.5% forest cover respectively
low_10=seq(70,10, -10)
low_5=seq(75, 5, by = -5)
low_25=seq(75, 2.5, by= -2.5)
simlength_total=200000
simlength_10=round(simlength_total/length(low_10))
simlength_10
simlength_5=round(simlength_total/length(low_5))
simlength_25=round(simlength_total/length(low_25))
for (i in 1:length(low_10)){
reclassmat=matrix(c(low_10[i], 100, low_10[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Historic_Taita)
plot(Chyulu2)
#writeRaster(Chyulu2, paste0("Chyulu_10_", low_10[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_10_", low_10[i], ".map"))
}
for (i in 1:length(low_10)){
reclassmat=matrix(c(low_10[i], 100, low_10[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Taita_Chyulu)
plot(Chyulu2)
#writeRaster(Chyulu2, paste0("Chyulu_10_", low_10[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_10_", low_10[i], ".map"))
}
carrying_capacity_raster= round(K* (Chyulu2/100))
plot(carrying_capacity_raster)
cellStats(carrying_capacity_raster, sum)
plot(Historic_Taita)
34289/100000
0.34*2
0.68*10
0.68*10*10
0.34*10
3.4*100
340/24
carrying_capacity_raster= round(K* (Chyulu2+20/100))
plot(carrying_capacity_raster)
carrying_capacity_raster= round(K* (Chyulu2+20)/100)))
carrying_capacity_raster= round(K* ((Chyulu2+20)/100))))
carrying_capacity_raster= round(K* ((Chyulu2+20)/100))
plot(carrying_capacity_raster)
cellStats(carrying_capacity_raster, sum)
plot(Chyulu)
Chyulu
library(raster)
library(rgdal)
library(tidyverse)
library(rasterVis)
#Map of the whole region
Taita_Chyulu=raster("TaitaChyulu_1sqkm.tif")
#Map of just the Chyuluy hills. Note that the cut-off was arbitrarily chosen and does not represent any political / geological area.
Chyulu=raster("Chyulu_cut.tif")
#This map will now be flattened step by step - in 10%, 5% and 2.5% steps down to 10%, 5% and 2.5% forest cover respectively
low_10=seq(70,10, -10)
low_5=seq(75, 5, by = -5)
low_25=seq(75, 2.5, by= -2.5)
simlength_total=200000
simlength_10=round(simlength_total/length(low_10))
simlength_5=round(simlength_total/length(low_5))
simlength_25=round(simlength_total/length(low_25))
for (i in 1:length(low_10)){
reclassmat=matrix(c(low_10[i], 100, low_10[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Taita_Chyulu)
plot(Chyulu2)
#writeRaster(Chyulu2, paste0("Chyulu_10_", low_10[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_10_", low_10[i], ".map"))
}
par(mfrow=c(4,2))
for (i in 1:length(low_10)){
reclassmat=matrix(c(low_10[i], 100, low_10[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Taita_Chyulu)
plot(Chyulu2)
#writeRaster(Chyulu2, paste0("Chyulu_10_", low_10[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_10_", low_10[i], ".map"))
}
plot(Chyulu2, xlim=c(350000, 450000))
plot(trim(Chyulu2), xlim=c(350000, 450000))
par(mfrow=c(4,2), mar=c(0, 0, 0, 0))
for (i in 1:length(low_10)){
reclassmat=matrix(c(low_10[i], 100, low_10[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Taita_Chyulu)
plot(trim(Chyulu2), xlim=c(350000, 450000))
#writeRaster(Chyulu2, paste0("Chyulu_10_", low_10[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_10_", low_10[i], ".map"))
}
levelplot(Chyulu2)
spplot(Chyulu2)
spplot(Chyulu2, col=terrain.colors(100))
for (i in 1:length(low_10)){
reclassmat=matrix(c(low_10[i], 100, low_10[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Taita_Chyulu)
spplotplot(trim(Chyulu2), xlim=c(350000, 450000))
#writeRaster(Chyulu2, paste0("Chyulu_10_", low_10[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_10_", low_10[i], ".map"))
}
spplot(trim(Chyulu2), xlim=c(350000, 450000))
for (i in 1:length(low_10)){
reclassmat=matrix(c(low_10[i], 100, low_10[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Taita_Chyulu)
spplot(trim(Chyulu2))
#writeRaster(Chyulu2, paste0("Chyulu_10_", low_10[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_10_", low_10[i], ".map"))
}
spplot(Chyulu2)
for (i in 1:length(low_10)){
reclassmat=matrix(c(low_10[i], 100, low_10[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Taita_Chyulu)
spplot(Chyulu2)
#writeRaster(Chyulu2, paste0("Chyulu_10_", low_10[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_10_", low_10[i], ".map"))
}
plot(Chyulu2, axes=F, box=F)
plot(Chyulu2, axes=F, box=F)
par(mfrow=c(1,1), mar=c(0, 0, 0, 0))
plot(Chyulu2, axes=F, box=F)
ggplot()+
geom_raster(data = as.data.frame(Taita_Chyulu, xy=T) , aes(x = x, y = y, fill = MapProposedTaitaChyulu_rotated), show.legend = F) +
scale_fill_viridis_c() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
ggplot()+
geom_raster(data = as.data.frame(Taita_Chyulu, xy=T) , aes(x = x, y = y, fill = Taita_Chyulu), show.legend = F) +
scale_fill_viridis_c() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
Taita_Chyulu
ggplot()+
geom_raster(data = as.data.frame(Taita_Chyulu, xy=T) , aes(x = x, y = y, fill = Taita_Chyulu_1sqkm), show.legend = F) +
scale_fill_viridis_c() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
plot(Chyulu2, axes=F, box=F)
plot(Chyulu2, axes=F, box=F, legend=F)
par(mfrow=c(2,1), mar=c(0, 0, 0, 0))
plot(Chyulu2, axes=F, box=F, legend=F)
#writeRaster(Chyulu2, paste0("Chyulu_10_", low_10[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_10_", low_10[i], ".map"))
}
plot(Chyulu2, axes=F, box=F, legend=F)
par(mfrow=c(1,2), mar=c(0, 0, 0, 0))
plot(Chyulu2, axes=F, box=F, legend=F)
plot(Chyulu2, axes=F, box=F, legend=F)
par(mfrow=c(2,4), mar=c(0, 0, 0, 0))
for (i in 1:length(low_10)){
reclassmat=matrix(c(low_10[i], 100, low_10[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Taita_Chyulu)
plot(Chyulu2, axes=F, box=F, legend=F)
#writeRaster(Chyulu2, paste0("Chyulu_10_", low_10[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_10_", low_10[i], ".map"))
}
par(mfrow=c(2,4), mar=c(0, 2, 0, 0))
for (i in 1:length(low_10)){
reclassmat=matrix(c(low_10[i], 100, low_10[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Taita_Chyulu)
plot(Chyulu2, axes=F, box=F, legend=F)
#writeRaster(Chyulu2, paste0("Chyulu_10_", low_10[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_10_", low_10[i], ".map"))
}
par(mfrow=c(2,4), mar=c(1, 0, 0, 0))
for (i in 1:length(low_10)){
reclassmat=matrix(c(low_10[i], 100, low_10[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Taita_Chyulu)
plot(Chyulu2, axes=F, box=F, legend=F)
#writeRaster(Chyulu2, paste0("Chyulu_10_", low_10[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_10_", low_10[i], ".map"))
}
library(raster)
library(rgdal)
library(tidyverse)
library(rasterVis)
## Take in the AGC raster and create a GeMM map file
convertMap = function(above_ground_carbon, run_length=simlength, out=map_output_file)
{
if (typeof(above_ground_carbon) == "character") {
above_ground_carbon = raster(above_ground_carbon)
}
print("Converting to GEMM input format")
map_text = c("## ZOSTEROPS EXPERIMENT MAP", "",
"# Timesteps", toString(run_length), "",
"# Simulation arena - autogenerated by `map_creator.R`",
"# Source: Pellikka et al. 2018 (above ground carbon data)",
##"# Sources: USGS LP-DAAC GFCC30TC (forest), CGIAR-CSI SRTM 90m DEM (elevation)",
"", "# <id> <x> <y> <temperature> <agc> [parameters]")
nrows = nrow(above_ground_carbon)
ncols = ncol(above_ground_carbon)
i = 1:(nrows*ncols)
x = rep(1:ncols, nrows)
y = rep(1:nrows, each=ncols)
map_text = c(map_text, paste(i, x, y, "temp=293", #XXX link temp to elevation?
paste0("prec=", round(above_ground_carbon[i], 2)),
"initpop", sep="\t"))
writeLines(map_text, out)
}
#Map of the whole region
Taita_Chyulu=raster("TaitaChyulu_1sqkm.tif")
plot(Taita_Chyulu)
Historic_reclassmat=matrix(c(35, 65, 80, 65, 100, 100), ncol=3, byrow=T)
Historic_reclassmat
Historic_Taita= reclassify(Taita_Chyulu, Historic_reclassmat)
plot(Historic_Taita)
Historic_reclassmat=matrix(c(30, 65, 80, 65, 100, 100), ncol=3, byrow=T)
Historic_Taita= reclassify(Taita_Chyulu, Historic_reclassmat)
plot(Historic_Taita)
plot(Taita_Chyulu)
Historic_reclassmat=matrix(c(30, 65, 80, 65, 100, 100), ncol=3, byrow=T)
Historic_Taita= reclassify(Taita_Chyulu, Historic_reclassmat)
plot(Historic_Taita)
Historic_reclassmat=matrix(c(25, 65, 80, 65, 100, 100), ncol=3, byrow=T)
Historic_Taita= reclassify(Taita_Chyulu, Historic_reclassmat)
plot(Historic_Taita)
Historic_reclassmat=matrix(c(20, 65, 80, 65, 100, 100), ncol=3, byrow=T)
Historic_Taita= reclassify(Taita_Chyulu, Historic_reclassmat)
plot(Historic_Taita)
Historic_reclassmat=matrix(c(30, 65, 80, 65, 100, 100), ncol=3, byrow=T)
Historic_Taita= reclassify(Taita_Chyulu, Historic_reclassmat)
plot(Historic_Taita)
#Map of just the Chyuluy hills. Note that the cut-off was arbitrarily chosen and does not represent any political / geological area.
Chyulu=raster("Chyulu_cut.tif")
plot(Chyulu)
low_25=seq(75, 2.5, by= -2.5)
simlength_total=200000
simlength_25=round(simlength_total/length(low_25))
for (i in 1:length(low_25)){
reclassmat=matrix(c(low_25[i], 100, low_25[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Taita_Chyulu)
plot(Chyulu2, axes=F, box=F, legend=F)
#writeRaster(Chyulu2, paste0("Chyulu_25_", low_25[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_25_", low_25[i], ".map"))
}
for (i in 1:length(low_25)){
reclassmat=matrix(c(low_25[i], 100, low_25[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Historic_Taita)
plot(Chyulu2, axes=F, box=F, legend=F)
jpeg()
#writeRaster(Chyulu2, paste0("Chyulu_25_", low_25[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_25_", low_25[i], ".map"))
}
for (i in 1:length(low_25)){
reclassmat=matrix(c(low_25[i], 100, low_25[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Historic_Taita)
plot(Chyulu2, axes=F, box=F, legend=F)
#writeRaster(Chyulu2, paste0("Chyulu_25_", low_25[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_25_", low_25[i], ".map"))
}
simlength_25
low_25
length(low_25)
par(mfrow=c(5,4), mar=c(1, 0, 0, 0))
for (i in 1:length(low_10)){
reclassmat=matrix(c(low_10[i], 100, low_10[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Taita_Chyulu)
plot(Chyulu2, axes=F, box=F, legend=F)
#writeRaster(Chyulu2, paste0("Chyulu_10_", low_10[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_10_", low_10[i], ".map"))
}
for (i in 1:length(low_25)){
reclassmat=matrix(c(low_25[i], 100, low_25[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Historic_Taita)
plot(Chyulu2, axes=F, box=F, legend=F)
writeRaster(Chyulu2, paste0("Chyulu_25_", low_25[i], ".tif"), overwrite=T)
convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_25_", low_25[i], ".map"))
}
for (i in 1:length(low_25)){
reclassmat=matrix(c(low_25[i], 100, low_25[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Historic_Taita)
plot(Chyulu2, axes=F, box=F, legend=F)
writeRaster(Chyulu2, paste0("Chyulu_25_", low_25[i], ".tif"), overwrite=T)
convertMap(Chyulu2, run_length = simlength_25, out=paste0("Chyulu_25_", low_25[i], ".map"))
}
par(mfrow=c(1,3), mar=c(1, 0, 0, 0))
for (i in 1:length(low_25)){
reclassmat=matrix(c(low_25[i], 100, low_25[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Historic_Taita)
plot(Chyulu2, axes=F, box=F, legend=F)
#writeRaster(Chyulu2, paste0("Chyulu_25_", low_25[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_25, out=paste0("Chyulu_25_", low_25[i], ".map"))
}
Historic_reclassmat=matrix(c(20, 30, 40, 30, 65, 80, 65, 100, 100), ncol=3, byrow=T)
Historic_Taita= reclassify(Taita_Chyulu, Historic_reclassmat)
plot(Historic_Taita)
Historic_reclassmat=matrix(c(15, 30, 500, 30, 65, 80, 65, 100, 100), ncol=3, byrow=T)
Historic_Taita= reclassify(Taita_Chyulu, Historic_reclassmat)
plot(Historic_Taita)
Historic_reclassmat=matrix(c(15, 30, 50, 30, 65, 80, 65, 100, 100), ncol=3, byrow=T)
Historic_Taita= reclassify(Taita_Chyulu, Historic_reclassmat)
plot(Historic_Taita)
Historic_reclassmat=matrix(c(15, 30, 55, 30, 65, 80, 65, 100, 100), ncol=3, byrow=T)
Historic_Taita= reclassify(Taita_Chyulu, Historic_reclassmat)
plot(Historic_Taita)
par(mfrow=c(6,5), mar=c(1, 0, 0, 0))
for (i in 1:length(low_25)){
reclassmat=matrix(c(low_25[i], 100, low_25[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Historic_Taita)
plot(Chyulu2, axes=F, box=F, legend=F)
#writeRaster(Chyulu2, paste0("Chyulu_25_", low_25[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_25, out=paste0("Chyulu_25_", low_25[i], ".map"))
}
par(mfrow=c(5,6), mar=c(1, 0, 0, 0))
for (i in 1:length(low_25)){
reclassmat=matrix(c(low_25[i], 100, low_25[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Historic_Taita)
plot(Chyulu2, axes=F, box=F, legend=F)
#writeRaster(Chyulu2, paste0("Chyulu_25_", low_25[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_25, out=paste0("Chyulu_25_", low_25[i], ".map"))
}
for (i in 1:length(low_25)){
reclassmat=matrix(c(low_25[i], 100, low_25[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Historic_Taita)
plot(Chyulu2, axes=F, box=F, legend=F)
writeRaster(Chyulu2, paste0("Chyulu_25_", low_25[i], ".tif"), overwrite=T)
convertMap(Chyulu2, run_length = simlength_25, out=paste0("Chyulu_25_", low_25[i], ".map"))
}
par(mfrow=c(1,1), mar=c(1, 0, 0, 0))
plot(Chyulu2, axes=F, box=F, legend=F)
plot(Chyulu2, axes=F, box=F, legend=T)
reclassmat=matrix(c(low_10[1], 100, low_10[1]), ncol=3, byrow=T)
reclassmat=matrix(c(low_25[1], 100, low_25[1]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Historic_Taita)
plot(Chyulu2, axes=F, box=F, legend=T)
library(raster)
library(rgdal)
library(tidyverse)
library(rasterVis)
x=4.5
floor(x)
ceiling(x)
round(x)
x=4.6
round(x)
ceiling(x)
floor(x)
#Map of the whole region
Taita_Chyulu=raster("TaitaChyulu_1sqkm.tif")
Historic_reclassmat=matrix(c(15, 30, 55, 30, 65, 80, 65, 100, 100), ncol=3, byrow=T)
Historic_Taita= reclassify(Taita_Chyulu, Historic_reclassmat)
plot(Taita_Chyulu)
plot(Historic_Taita)
K=100
#Map of just the Chyuluy hills. Note that the cut-off was arbitrarily chosen and does not represent any political / geological area.
Chyulu=raster("Chyulu_cut.tif")
plot(Chyulu)
#This map will now be flattened step by step - in 10%, 5% and 2.5% steps down to 10%, 5% and 2.5% forest cover respectively
low_10=seq(70,10, -10)
low_5=seq(75, 5, by = -5)
low_25=seq(75, 2.5, by= -2.5)
simlength_total=2000
simlength_10=round(simlength_total/length(low_10))
simlength_5=round(simlength_total/length(low_5))
simlength_25=round(simlength_total/length(low_25))
simlength_25
string(2.3)
paste0(2.3)
2.5*10
capacity= function(agc_data) {
cc = floor(100* ((agc_data+20)/100))*2
cc = sapply(cc, function(p) ifelse(p>=2, p, ifelse(runif(1)<0.01, 2, 0)))
return(cc)
}
## Take in the AGC raster and create a GeMM map file
convertMap = function(above_ground_carbon, run_length=simlength, out=map_output_file)
{
if (typeof(above_ground_carbon) == "character") {
above_ground_carbon = raster(above_ground_carbon)
}
print("Converting to GEMM input format")
map_text = c("## ZOSTEROPS EXPERIMENT MAP", "",
"# Timesteps", toString(run_length), "",
"# Simulation arena - autogenerated by `map_creator.R`",
"# Source: ",
##"# Sources: USGS LP-DAAC GFCC30TC (forest), CGIAR-CSI SRTM 90m DEM (elevation)",
"", "# <id> <x> <y> <temperature> <agc> [parameters]")
nrows = nrow(above_ground_carbon)
ncols = ncol(above_ground_carbon)
i = 1:(nrows*ncols)
x = rep(1:ncols, nrows)
y = rep(1:nrows, each=ncols)
map_text = c(map_text, paste(i, x, y, "temp=293", #XXX link temp to elevation?
paste0("prec=", round(above_ground_carbon[i], 2)),
paste0("capacity=", capacity(above_ground_carbon[i])),
ifelse(above_ground_carbon[i]>0,"initpop", ""),
sep="\t"))
writeLines(map_text, out)
}
carrying_capacity_raster= capacity(Taita_Chyulu)
plot(carrying_capacity_raster)
cellStats(carrying_capacity_raster, sum)
sum(carrying_capacity_raster)
## Take in the AGC raster and create a GeMM map file
convertMap = function(above_ground_carbon, run_length=simlength, out=map_output_file)
{
if (typeof(above_ground_carbon) == "character") {
above_ground_carbon = raster(above_ground_carbon)
}
print("Converting to GEMM input format")
map_text = c("## ZOSTEROPS EXPERIMENT MAP", "",
"# Timesteps", toString(run_length), "",
"# Simulation arena - autogenerated by `map_creator.R`",
"# Source: Townsend et al. 2016 (forest cover data)",
##"# Sources: GFCC Multi-Year Global 30 m V001. NASA EOSDIS Land Processes DAAC",
"", "# <id> <x> <y> <temperature> <agc> [parameters]")
nrows = nrow(above_ground_carbon)
ncols = ncol(above_ground_carbon)
i = 1:(nrows*ncols)
x = rep(1:ncols, nrows)
y = rep(1:nrows, each=ncols)
map_text = c(map_text, paste(i, x, y, "temp=293", #XXX link temp to elevation?
paste0("prec=", round(above_ground_carbon[i], 2)),
paste0("capacity=", capacity(above_ground_carbon[i])),
ifelse(above_ground_carbon[i]>0,"initpop", ""),
sep="\t"))
writeLines(map_text, out)
}
for (i in 1:length(low_25)){
reclassmat=matrix(c(low_25[i], 100, low_25[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Historic_Taita)
plot(Chyulu2, axes=F, box=F, legend=F)
writeRaster(Chyulu2, paste0("Chyulu_25_", low_25[i]*10, ".tif"), overwrite=T)
#converting the rasters to .map format. Note that the simulation run time is for one map only.
#After the simulation ran for that many steps, it will switch to the next map!
#If the maps should be used for different simulation lengths, it is necessary to switch the simlength argument!
convertMap(Chyulu2, run_length = simlength_25, out=paste0("Chyulu_25_", low_25[i]*10, ".map"))
}
library(raster)
library(rgdal)
library(tidyverse)
library(rasterVis)
setwd("/home/charlotte/Zosterops/GranuleSouthKenya_Maps/Chyulu_25")
setwd("/home/charlotte/Zosterops/GranuleSouthKenya_Maps/Chyulu_Taita_Maps")
FinalMap=raster("Chyulu_25_75.tif")
plot(FinalMap)
plot(FinalMap(1:300))
test=raster("MapTaitaChyulu_aggregated.tif")
setwd("/home/charlotte/Zosterops/gemm/studies/zosterops/Chyulu_Taita_Maps/Landscape_tif")
setwd("/home/charlotte/Zosterops/GranuleSouthKenya_Maps/") #Chyulu_Taita_Maps")
HillsMountain_sqkm=raster("TaitaChyulu_1sqkm.tif")
plot(HillsMountain_sqkm)
Start_map=raster("Chyulu_750.tif")
setwd("/home/charlotte/Zosterops/gemm/studies/zosterops/Chyulu_Taita_Maps/Landscape_tif")
Start_map=raster("Chyulu_750.tif")
plot(Start_map)
Map_datafram=as.data.frame(Start_map,xy=T)
Map_datafram%>%
ggplot(aes(x,y, fill= Chyulu_750))+
geom_tile(show.legend = F)+
coord_equal()+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("forest cover")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
head(Map_datafram)
Map_datafram%>%
ggplot(aes(x,y, fill= Chyulu_750))+
geom_tile(show.legend = F)+
coord_equal()+
theme_bw()+
#theme(axis.title.x =element_blank(),
#     axis.text.x =element_blank(),
#    axis.ticks.x =element_blank(),
#   axis.title.y =element_blank(),
#  axis.text.y =element_blank(),
# axis.ticks.y =element_blank())+
ggtitle("forest cover")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
which(is.na(Start_map))
is.na(Start_map)
is.na(Map_datafram)
which(is.na(Map_datafram$Chyulu_750))
View(Start_map)
Historic_reclassmat=matrix(c(15, 30, 55, 30, 65, 80, 65, 100, 100), ncol=3, byrow=T)
Historic_reclassmat
#Map of the whole region
Taita_Chyulu=raster("TaitaChyulu_1sqkm.tif")
