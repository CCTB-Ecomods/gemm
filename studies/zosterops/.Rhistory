i = 1:(nrows*ncols)
x = rep(1:ncols, nrows)
y = rep(1:nrows, each=ncols)
map_text = c(map_text, paste(i, x, y, "temp=293", #XXX link temp to elevation?
paste0("prec=", round(above_ground_carbon[i], 2)),
paste0("capacity=", capacity(above_ground_carbon[i])),
ifelse(above_ground_carbon[i]>0,"initpop", ""),
sep="\t"))
writeLines(map_text, out)
}
capacity= function(agc_data) {
cc = floor(100* ((agc_data)/100))*2
cc = sapply(cc, function(p) ifelse(p>=2, p, ifelse(runif(1)<0.01, 2, 0)))
return(cc)
}
#Map of the whole region
Taita_Chyulu=raster("TaitaChyulu_1sqkm.tif")
Historic_reclassmat=matrix(c(5, 7.5, 10,
7.5, 10, 12.5,
10, 12.5, 15,
12.5, 15, 20,
15, 17.5, 25,
17.5, 20, 30,
20, 22.5, 35,
25, 27.5, 40,
27.5, 30, 45,
30, 32.5, 50,
32.5, 35, 55,
35, 37.5, 60,
37.5, 40, 65,
40, 42.5, 67.5,
42.5, 45, 70,
45, 47.5, 72.5,
47.5, 50, 75,
50, 52.5, 77.5,
52.5, 55, 80,
55, 57.5, 82.5,
57.5, 60, 85,
60, 62.5, 87.5,
62.5, 65, 90,
65, 67.5, 92.5,
67.5, 70, 95,
70, 72.5, 97.5,
72.5,75, 98,
75, 77.5, 98.5,
77.5, 80, 99,
80, 100, 100), ncol=3, byrow=T) #c(15, 30, 55, 30, 65, 80, 65, 100, 100)
startvec=seq(5,100, by=1.25)
endvec=seq(6.25,100, length.out=length(startvec))
goalvec=seq(7.5, 100, length.out=length(startvec))
Historic_reclassmat=cbind(startvec, endvec, goalvec)
Historic_Taita= reclassify(Taita_Chyulu, Historic_reclassmat)
par(mfrow=c(1,2))
plot(Taita_Chyulu)
plot(Historic_Taita)
plot(Taita_Chyulu)
plot(Historic_Taita)
reclassmat2=c(15, 30, 55, 30, 65, 80, 65, 100, 100)
Historic_Taita=reclassify(Historic_Taita,reclassmat2)
plot(Taita_Chyulu)
plot(Historic_Taita)
Historic_Taita= reclassify(Taita_Chyulu, Historic_reclassmat)
plot(Historic_Taita)
Historic_Taita=reclassify(Historic_Taita,reclassmat2)
plot(Taita_Chyulu)
plot(Historic_Taita)
Historic_Taita=reclassify(Historic_Taita, Historic_reclassmat)
par(mfrow=c(1,2))
plot(Taita_Chyulu)
plot(Historic_Taita)
Historic_Taita= reclassify(Taita_Chyulu, Historic_reclassmat)
plot(Historic_Taita)
Historic_Taita=reclassify(Historic_Taita,reclassmat2)
plot(Historic_Taita)
Historic_Taita=reclassify(Historic_Taita, Historic_reclassmat)
plot(Historic_Taita)
Historic_Taita= reclassify(Taita_Chyulu, Historic_reclassmat)
Historic_Taita=reclassify(Historic_Taita, Historic_reclassmat)
plot(Historic_Taita)
Historic_Taita=reclassify(Historic_Taita,reclassmat2)
plot(Historic_Taita)
Popspec_eco <- read.delim("~/Zosterops/gemm/results/speciation_eco_NewMaps/pops.tsv")
View(Popspec_eco)
Popspec_mut <- read.delim("~/Zosterops/gemm/results/speciation_mut_NewMaps/pops.tsv")
View(Popspec_mut)
library(tidyverse)
library(raster)
library(gridExtra)
#### ####
#plots of forest cover niche - optimum and tolerance
Popspec_mut%>%
ggplot(aes(time, precoptmean))+
geom_jitter(aes(color= prec), size=0.5)+
ylab("forest cover optimum")+
labs(color="forest cover")+
ggtitle("Mutation order")+
scale_color_gradientn(colours=rev(terrain.colors(100)))
Popspec_eco%>%
ggplot(aes(time, precoptmean))+
geom_jitter(aes(color= prec), size=0.5)+
ylab("forest cover optimum")+
labs(color="forest cover")+
ggtitle("Ecological")+
scale_color_gradientn(colours=rev(terrain.colors(100)))
Popspec_mut%>%
ggplot(aes(time, prectolmean))+
geom_jitter(aes(color= prec), size=0.5)+
ylab("forest cover tolerance")+
labs(color="forest cover")+
ggtitle("Mutation order")+
scale_color_gradientn(colours=rev(terrain.colors(100)))
Popspec_eco%>%
ggplot(aes(time, prectolmean))+
geom_jitter(aes(color= prec), size=0.5)+
ylab("forest cover tolerance")+
#ylim(c(0,100))+
labs(color="forest cover")+
ggtitle("Ecological")+
scale_color_gradientn(colours=rev(terrain.colors(100)))
Popspec_eco%>%
filter(time==max(time))%>%
ggplot(aes(precoptmean, prectolmean))+
geom_jitter(aes(color= prec))+
ylab("forest cover tolerance")+
xlab("forest cover optimum")+
labs(color="forest cover")+
ggtitle("Ecological")+
scale_color_gradientn(colours=rev(terrain.colors(100)))
Popspec_mut%>%
filter(time==max(time))%>%
ggplot(aes(precoptmean, prectolmean))+
geom_jitter(aes(color= prec))+
ylab("forest cover tolerance")+
xlab("forest cover optimum")+
labs(color="forest cover")+
ggtitle("Mutation order")+
scale_color_gradientn(colours=rev(terrain.colors(100)))
head(Popspec_eco)
#plots of temperature niche - optimum and tolerance
Popspec%>%
ggplot(aes(time,dispmean))+
geom_jitter(aes(color= prec), size=0.5)+
ylab("Mean dispersal distance")+
labs(color="forest cover")+
scale_color_gradientn(colours=rev(terrain.colors(100)))
#plots of temperature niche - optimum and tolerance
Popspec_eco%>%
ggplot(aes(time,dispmean))+
geom_jitter(aes(color= prec), size=0.5)+
ylab("Mean dispersal distance")+
labs(color="forest cover")+
scale_color_gradientn(colours=rev(terrain.colors(100)))
#plots of temperature niche - optimum and tolerance
Popspec_eco%>%
ggplot(aes(time,dispmeanmean))+
geom_jitter(aes(color= prec), size=0.5)+
ylab("Mean dispersal distance")+
labs(color="forest cover")+
scale_color_gradientn(colours=rev(terrain.colors(100)))
range(Popspec_eco$dispmeanmean)
table(Popspec_eco$dispmeanmean)
hist(Popspec_eco$dispmeanmean)
#plots of temperature niche - optimum and tolerance
Popspec_eco%>%
ggplot(aes(time,dispmeanmean))+
geom_jitter(aes(color= prec), size=0.5)+
ylim(c(0,2000))+
ylab("Mean dispersal distance")+
labs(color="forest cover")+
ggtitle("Ecological")
#plots of temperature niche - optimum and tolerance
Popspec_eco%>%
ggplot(aes(time,dispmeanmean))+
geom_jitter(aes(color= prec), size=0.5)+
ylim(c(0,2000))+
ylab("Mean dispersal distance")+
labs(color="forest cover")+
ggtitle("Ecological")+
scale_color_gradientn(colours=rev(terrain.colors(100)))
View(Popspec_eco)
range(Popspec_eco$dispmeanmean)
Popspec_mut%>%
ggplot(aes(time,dispmeanmean))+
geom_jitter(aes(color= prec), size=0.5)+
ylim(c(0,2000))+
ylab("Mean dispersal distance")+
labs(color="forest cover")+
ggtitle("Mutation order")+
scale_color_gradientn(colours=rev(terrain.colors(100)))
range(Popspec_mut$dispmeanmean)
time_interest=1000
Optimumplot_mut=
Popspec_mut %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= precoptmean))+
geom_tile(show.legend = T)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("mutation order")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
Optimumplot_mut
Optimumplot_eco=
Popspec_eco %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= precoptmean))+
geom_tile(show.legend = F)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("year 560")+
labs(fill="forest cover\noptimum")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
Optimumplot_eco
Optimumplot_eco=
Popspec_eco %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= precoptmean))+
geom_tile(show.legend = F)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("Ecological")+
labs(fill="forest cover\noptimum")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
Optimumplot_eco
grid.arrange(Optimumplot_eco, Optimumplot_mut, nrow= 1)
Optimumplot_eco=
Popspec_eco %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= precoptmean))+
geom_tile(show.legend = F)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("ecological")+
labs(fill="forest cover\noptimum")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
grid.arrange(Optimumplot_eco, Optimumplot_mut, nrow= 1)
max(Popspec_eco$time)
max(Popspec_mut$time)
time_interest=36000
Optimumplot_mut=
Popspec_mut %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= precoptmean))+
geom_tile(show.legend = T)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("mutation order")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
Optimumplot_eco=
Popspec_eco %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= precoptmean))+
geom_tile(show.legend = F)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("ecological")+
labs(fill="forest cover\noptimum")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
grid.arrange(Optimumplot_eco, Optimumplot_mut, nrow= 1)
Optimumplot_mut=
Popspec_mut %>%
filter(time==max(time))%>%
ggplot(aes(x,y, fill= precoptmean))+
geom_tile(show.legend = T)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("mutation order")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
Optimumplot_mut
Toleranceplot_mut=
Popspec_mut %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= prectolmean))+
geom_tile(show.legend = T)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("mutation order")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
Toleranceplot_eco=
Popspec_eco %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= prectolmean))+
geom_tile(show.legend = T)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("ecological")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
grid.arrange(Toleranceplot_eco, Toleranceplot_mut, nrow=1)
time_interest=1000
Toleranceplot_mut=
Popspec_mut %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= prectolmean))+
geom_tile(show.legend = T)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("mutation order")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
Toleranceplot_eco=
Popspec_eco %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= prectolmean))+
geom_tile(show.legend = T)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("ecological")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,100))
grid.arrange(Toleranceplot_eco, Toleranceplot_mut, nrow=1)
Toleranceplot_mut=
Popspec_mut %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= prectolmean))+
geom_tile(show.legend = T)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("mutation order")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,10))
Toleranceplot_eco=
Popspec_eco %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= prectolmean))+
geom_tile(show.legend = T)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("ecological")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,10))
grid.arrange(Toleranceplot_eco, Toleranceplot_mut, nrow=1)
time_interest=36000
Toleranceplot_mut=
Popspec_mut %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= prectolmean))+
geom_tile(show.legend = T)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("mutation order")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,10))
Toleranceplot_eco=
Popspec_eco %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= prectolmean))+
geom_tile(show.legend = T)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("ecological")+
labs(fill="")+
scale_fill_gradientn(colours = rev(terrain.colors(100)), limits=c(0,10))
grid.arrange(Toleranceplot_eco, Toleranceplot_mut, nrow=1)
Adultplot_eco=
Popspec_eco %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= adults))+
geom_tile(show.legend = T)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("ecological")+
labs(fill="N adults")
Adultplot_mut=
Popspec_mut %>%
filter(time==time_interest)%>%
ggplot(aes(x,y, fill= adults))+
geom_tile(show.legend = T)+
coord_equal()+
ylim(171,0)+
xlim(0,46)+
theme_bw()+
theme(axis.title.x =element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.title.y =element_blank(),
axis.text.y =element_blank(),
axis.ticks.y =element_blank())+
ggtitle("mutation order")+
labs(fill="N adults")
grid.arrange(Adultplot_eco, Adultplot_mut, nrow=1)
