ggplot()+
geom_raster(data = as.data.frame.(HillsMountains4, xy=T) , aes(x = x, y = y, fill = values)) +
coord_quickmap()
ggplot()+
geom_raster(data = as.data.frame(HillsMountains4, xy=T) , aes(x = x, y = y, fill = values)) +
coord_quickmap()
ggplot()+
geom_raster(data = as.data.frame(HillsMountains4, xy=T) , aes(x = x, y = y, fill = HillsMountains4)) +
coord_quickmap()
names(HillsMountains4)
ggplot()+
geom_raster(data = as.data.frame(HillsMountains4, xy=T) , aes(x = x, y = y, fill = MapProposedTaitaChyulu_rotated)) +
coord_quickmap()
ggplot()+
geom_raster(data = as.data.frame(HillsMountains4, xy=T) , aes(x = x, y = y, fill = MapProposedTaitaChyulu_rotated), show.legend = F) +
scale_fill_viridis_c() +
coord_quickmap()
ggplot()+
geom_raster(data = as.data.frame(HillsMountains4, xy=T) , aes(x = x, y = y, fill = MapProposedTaitaChyulu_rotated), show.legend = F) +
scale_fill_viridis_c() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
library(raster)
library(rgdal)
library(tidyverse)
library(rasterVis)
HillsMountains=raster("MapProposedTaitaChyulu_rotated.tif")
HillsMountains_scaled=HillsMountains*0.3264632
HillsMountains_transposed=HillsMountains_scaled*-1
HillsMountains_transposed2=HillsMountains_transposed+83
plot(HillsMountains_transposed2)
HillsMountains_transposed2
writeRaster(HillsMountains_transposed2, "TaitaChyulu.tif")
HillsMountain_sqkm=raster("TaitaChyulu_1sqkm.tif")
HillsMountain_sqkm
HillsMountain_sqkm=raster("TaitaChyulu_1sqkm.tif")
HillsMountain_sqkm
HillsMountain_sqkm=raster("TaitaChyulu_1sqkm.tif")
HillsMountain_sqkm
plot(HillsMountain_sqkm)
HillsMountain_sqkm=raster("TaitaChyulu_1sqkm.tif")
HillsMountain_sqkm
plot(HillsMountain_sqkm)
7695*20
200000/1000
200*10
2000/24
input_vec=seq(25, 45, 1)
input_vec
new_value_vec=input_vec+20
new_value_vec
length(input_vec)
history_reclass=matrix(c(input_vec, rep(45, 21), new_value_vec), ncol = 3, byrow = T)
View(history_reclass)
history_reclass=matrix(c(input_vec, rep(45, 21), new_value_vec), ncol = 3, bycol = T)
, bycol = T
history_reclass=matrix(c(input_vec, rep(45, 21), new_value_vec), ncol = 3)
Historic_Taita=reclassify(Taita_Chyulu, )
history_reclass=matrix(c(input_vec, rep(45, 21), new_value_vec), ncol = 3)
#Map of the whole region
Taita_Chyulu=raster("MapTaitaChyulu_1sqkm.tif")
#Map of the whole region
Taita_Chyulu=raster("TaitaChyulu_1sqkm.tif")
Historic_Taita=reclassify(Taita_Chyulu, history_reclass)
plot(Historic_Taita)
input_vec=seq(20, 45, 1)
new_value_vec=input_vec+25
history_reclass=matrix(c(input_vec, rep(45, length(input_vec)), new_value_vec), ncol = 3)
Historic_Taita=reclassify(Taita_Chyulu, history_reclass)
plot(Historic_Taita)
input_vec
input_vec=seq(18, 45, 1)
new_value_vec=input_vec+25
history_reclass=matrix(c(input_vec, rep(45, length(input_vec)), new_value_vec), ncol = 3)
Historic_Taita=reclassify(Taita_Chyulu, history_reclass)
plot(Historic_Taita)
new_value_vec=input_vec+30
history_reclass=matrix(c(input_vec, rep(45, length(input_vec)), new_value_vec), ncol = 3)
Historic_Taita=reclassify(Taita_Chyulu, history_reclass)
plot(Historic_Taita)
input_vec=seq(18, 50, 1)
new_value_vec=input_vec+30
history_reclass=matrix(c(input_vec, rep(45, length(input_vec)), new_value_vec), ncol = 3)
Historic_Taita=reclassify(Taita_Chyulu, history_reclass)
plot(Historic_Taita)
Historic_Taita=reclassify(Taita_Chyulu, history_reclass)
history_reclass=matrix(c(input_vec, rep(45, length(input_vec)), new_value_vec), ncol = 3)
history_reclass=matrix(c(input_vec, rep(50, length(input_vec)), new_value_vec), ncol = 3)
Historic_Taita=reclassify(Taita_Chyulu, history_reclass)
plot(Historic_Taita)
input_vec=seq(15, 50, 1)
new_value_vec=input_vec+30
history_reclass=matrix(c(input_vec, rep(50, length(input_vec)), new_value_vec), ncol = 3)
Historic_Taita=reclassify(Taita_Chyulu, history_reclass)
plot(Historic_Taita)
input_vec=seq(10, 50, 1)
new_value_vec=input_vec+30
history_reclass=matrix(c(input_vec, rep(50, length(input_vec)), new_value_vec), ncol = 3)
Historic_Taita=reclassify(Taita_Chyulu, history_reclass)
plot(Historic_Taita)
input_vec=seq(10, 60, 1)
new_value_vec=input_vec+30
history_reclass=matrix(c(input_vec, rep(50, length(input_vec)), new_value_vec), ncol = 3)
Historic_Taita=reclassify(Taita_Chyulu, history_reclass)
history_reclass=matrix(c(input_vec, rep(60, length(input_vec)), new_value_vec), ncol = 3)
Historic_Taita=reclassify(Taita_Chyulu, history_reclass)
plot(Historic_Taita)
input_vec=seq(10, 80, 1)
new_value_vec=input_vec+20
history_reclass=matrix(c(input_vec, rep(80, length(input_vec)), new_value_vec), ncol = 3)
Historic_Taita=reclassify(Taita_Chyulu, history_reclass)
plot(Historic_Taita)
Historic_Taita
new_value_vec
history_reclass
click(Historic_Taita)
input_vec=seq(18, 45, 1)
new_value_vec=input_vec+30
history_reclass=matrix(c(input_vec, rep(45, length(input_vec)), new_value_vec), ncol = 3)
Historic_Taita=reclassify(Taita_Chyulu, history_reclass)
plot(Historic_Taita)
Historic_Taita= Taita_Chyulu+20
plot(Historic_Taita)
carrying_capacity_raster= K* (Historic_Taita/100)
K=100
carrying_capacity_raster= K* (Historic_Taita/100)
plot(carrying_capacity_raster)
cellStats(carrying_capacity_raster, sum)
carrying_capacity_raster= round(K* (Historic_Taita/100))
plot(carrying_capacity_raster)
cellStats(carrying_capacity_raster, sum)
carrying_capacity_raster= round(K* (Taita_Chyulu/100))
cellStats(carrying_capacity_raster, sum)
#Map of just the Chyuluy hills. Note that the cut-off was arbitrarily chosen and does not represent any political / geological area.
Chyulu=raster("Chyulu_cut.tif")
plot(Chyulu)
#This map will now be flattened step by step - in 10%, 5% and 2.5% steps down to 10%, 5% and 2.5% forest cover respectively
low_10=seq(70,10, -10)
low_5=seq(75, 5, by = -5)
low_25=seq(75, 2.5, by= -2.5)
simlength_total=200000
simlength_10=round(simlength_total/length(low_10))
simlength_10
simlength_5=round(simlength_total/length(low_5))
simlength_25=round(simlength_total/length(low_25))
for (i in 1:length(low_10)){
reclassmat=matrix(c(low_10[i], 100, low_10[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Historic_Taita)
plot(Chyulu2)
#writeRaster(Chyulu2, paste0("Chyulu_10_", low_10[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_10_", low_10[i], ".map"))
}
for (i in 1:length(low_10)){
reclassmat=matrix(c(low_10[i], 100, low_10[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Taita_Chyulu)
plot(Chyulu2)
#writeRaster(Chyulu2, paste0("Chyulu_10_", low_10[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_10_", low_10[i], ".map"))
}
carrying_capacity_raster= round(K* (Chyulu2/100))
plot(carrying_capacity_raster)
cellStats(carrying_capacity_raster, sum)
plot(Historic_Taita)
34289/100000
0.34*2
0.68*10
0.68*10*10
0.34*10
3.4*100
340/24
carrying_capacity_raster= round(K* (Chyulu2+20/100))
plot(carrying_capacity_raster)
carrying_capacity_raster= round(K* (Chyulu2+20)/100)))
carrying_capacity_raster= round(K* ((Chyulu2+20)/100))))
carrying_capacity_raster= round(K* ((Chyulu2+20)/100))
plot(carrying_capacity_raster)
cellStats(carrying_capacity_raster, sum)
plot(Chyulu)
Chyulu
library(raster)
library(rgdal)
library(tidyverse)
library(rasterVis)
#Map of the whole region
Taita_Chyulu=raster("TaitaChyulu_1sqkm.tif")
#Map of just the Chyuluy hills. Note that the cut-off was arbitrarily chosen and does not represent any political / geological area.
Chyulu=raster("Chyulu_cut.tif")
#This map will now be flattened step by step - in 10%, 5% and 2.5% steps down to 10%, 5% and 2.5% forest cover respectively
low_10=seq(70,10, -10)
low_5=seq(75, 5, by = -5)
low_25=seq(75, 2.5, by= -2.5)
simlength_total=200000
simlength_10=round(simlength_total/length(low_10))
simlength_5=round(simlength_total/length(low_5))
simlength_25=round(simlength_total/length(low_25))
for (i in 1:length(low_10)){
reclassmat=matrix(c(low_10[i], 100, low_10[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Taita_Chyulu)
plot(Chyulu2)
#writeRaster(Chyulu2, paste0("Chyulu_10_", low_10[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_10_", low_10[i], ".map"))
}
par(mfrow=c(4,2))
for (i in 1:length(low_10)){
reclassmat=matrix(c(low_10[i], 100, low_10[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Taita_Chyulu)
plot(Chyulu2)
#writeRaster(Chyulu2, paste0("Chyulu_10_", low_10[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_10_", low_10[i], ".map"))
}
plot(Chyulu2, xlim=c(350000, 450000))
plot(trim(Chyulu2), xlim=c(350000, 450000))
par(mfrow=c(4,2), mar=c(0, 0, 0, 0))
for (i in 1:length(low_10)){
reclassmat=matrix(c(low_10[i], 100, low_10[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Taita_Chyulu)
plot(trim(Chyulu2), xlim=c(350000, 450000))
#writeRaster(Chyulu2, paste0("Chyulu_10_", low_10[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_10_", low_10[i], ".map"))
}
levelplot(Chyulu2)
spplot(Chyulu2)
spplot(Chyulu2, col=terrain.colors(100))
for (i in 1:length(low_10)){
reclassmat=matrix(c(low_10[i], 100, low_10[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Taita_Chyulu)
spplotplot(trim(Chyulu2), xlim=c(350000, 450000))
#writeRaster(Chyulu2, paste0("Chyulu_10_", low_10[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_10_", low_10[i], ".map"))
}
spplot(trim(Chyulu2), xlim=c(350000, 450000))
for (i in 1:length(low_10)){
reclassmat=matrix(c(low_10[i], 100, low_10[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Taita_Chyulu)
spplot(trim(Chyulu2))
#writeRaster(Chyulu2, paste0("Chyulu_10_", low_10[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_10_", low_10[i], ".map"))
}
spplot(Chyulu2)
for (i in 1:length(low_10)){
reclassmat=matrix(c(low_10[i], 100, low_10[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Taita_Chyulu)
spplot(Chyulu2)
#writeRaster(Chyulu2, paste0("Chyulu_10_", low_10[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_10_", low_10[i], ".map"))
}
plot(Chyulu2, axes=F, box=F)
plot(Chyulu2, axes=F, box=F)
par(mfrow=c(1,1), mar=c(0, 0, 0, 0))
plot(Chyulu2, axes=F, box=F)
ggplot()+
geom_raster(data = as.data.frame(Taita_Chyulu, xy=T) , aes(x = x, y = y, fill = MapProposedTaitaChyulu_rotated), show.legend = F) +
scale_fill_viridis_c() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
ggplot()+
geom_raster(data = as.data.frame(Taita_Chyulu, xy=T) , aes(x = x, y = y, fill = Taita_Chyulu), show.legend = F) +
scale_fill_viridis_c() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
Taita_Chyulu
ggplot()+
geom_raster(data = as.data.frame(Taita_Chyulu, xy=T) , aes(x = x, y = y, fill = Taita_Chyulu_1sqkm), show.legend = F) +
scale_fill_viridis_c() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
plot(Chyulu2, axes=F, box=F)
plot(Chyulu2, axes=F, box=F, legend=F)
par(mfrow=c(2,1), mar=c(0, 0, 0, 0))
plot(Chyulu2, axes=F, box=F, legend=F)
#writeRaster(Chyulu2, paste0("Chyulu_10_", low_10[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_10_", low_10[i], ".map"))
}
plot(Chyulu2, axes=F, box=F, legend=F)
par(mfrow=c(1,2), mar=c(0, 0, 0, 0))
plot(Chyulu2, axes=F, box=F, legend=F)
plot(Chyulu2, axes=F, box=F, legend=F)
par(mfrow=c(2,4), mar=c(0, 0, 0, 0))
for (i in 1:length(low_10)){
reclassmat=matrix(c(low_10[i], 100, low_10[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Taita_Chyulu)
plot(Chyulu2, axes=F, box=F, legend=F)
#writeRaster(Chyulu2, paste0("Chyulu_10_", low_10[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_10_", low_10[i], ".map"))
}
par(mfrow=c(2,4), mar=c(0, 2, 0, 0))
for (i in 1:length(low_10)){
reclassmat=matrix(c(low_10[i], 100, low_10[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Taita_Chyulu)
plot(Chyulu2, axes=F, box=F, legend=F)
#writeRaster(Chyulu2, paste0("Chyulu_10_", low_10[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_10_", low_10[i], ".map"))
}
par(mfrow=c(2,4), mar=c(1, 0, 0, 0))
for (i in 1:length(low_10)){
reclassmat=matrix(c(low_10[i], 100, low_10[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Taita_Chyulu)
plot(Chyulu2, axes=F, box=F, legend=F)
#writeRaster(Chyulu2, paste0("Chyulu_10_", low_10[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_10_", low_10[i], ".map"))
}
library(raster)
library(rgdal)
library(tidyverse)
library(rasterVis)
## Take in the AGC raster and create a GeMM map file
convertMap = function(above_ground_carbon, run_length=simlength, out=map_output_file)
{
if (typeof(above_ground_carbon) == "character") {
above_ground_carbon = raster(above_ground_carbon)
}
print("Converting to GEMM input format")
map_text = c("## ZOSTEROPS EXPERIMENT MAP", "",
"# Timesteps", toString(run_length), "",
"# Simulation arena - autogenerated by `map_creator.R`",
"# Source: Pellikka et al. 2018 (above ground carbon data)",
##"# Sources: USGS LP-DAAC GFCC30TC (forest), CGIAR-CSI SRTM 90m DEM (elevation)",
"", "# <id> <x> <y> <temperature> <agc> [parameters]")
nrows = nrow(above_ground_carbon)
ncols = ncol(above_ground_carbon)
i = 1:(nrows*ncols)
x = rep(1:ncols, nrows)
y = rep(1:nrows, each=ncols)
map_text = c(map_text, paste(i, x, y, "temp=293", #XXX link temp to elevation?
paste0("prec=", round(above_ground_carbon[i], 2)),
"initpop", sep="\t"))
writeLines(map_text, out)
}
#Map of the whole region
Taita_Chyulu=raster("TaitaChyulu_1sqkm.tif")
plot(Taita_Chyulu)
Historic_reclassmat=matrix(c(35, 65, 80, 65, 100, 100), ncol=3, byrow=T)
Historic_reclassmat
Historic_Taita= reclassify(Taita_Chyulu, Historic_reclassmat)
plot(Historic_Taita)
Historic_reclassmat=matrix(c(30, 65, 80, 65, 100, 100), ncol=3, byrow=T)
Historic_Taita= reclassify(Taita_Chyulu, Historic_reclassmat)
plot(Historic_Taita)
plot(Taita_Chyulu)
Historic_reclassmat=matrix(c(30, 65, 80, 65, 100, 100), ncol=3, byrow=T)
Historic_Taita= reclassify(Taita_Chyulu, Historic_reclassmat)
plot(Historic_Taita)
Historic_reclassmat=matrix(c(25, 65, 80, 65, 100, 100), ncol=3, byrow=T)
Historic_Taita= reclassify(Taita_Chyulu, Historic_reclassmat)
plot(Historic_Taita)
Historic_reclassmat=matrix(c(20, 65, 80, 65, 100, 100), ncol=3, byrow=T)
Historic_Taita= reclassify(Taita_Chyulu, Historic_reclassmat)
plot(Historic_Taita)
Historic_reclassmat=matrix(c(30, 65, 80, 65, 100, 100), ncol=3, byrow=T)
Historic_Taita= reclassify(Taita_Chyulu, Historic_reclassmat)
plot(Historic_Taita)
#Map of just the Chyuluy hills. Note that the cut-off was arbitrarily chosen and does not represent any political / geological area.
Chyulu=raster("Chyulu_cut.tif")
plot(Chyulu)
low_25=seq(75, 2.5, by= -2.5)
simlength_total=200000
simlength_25=round(simlength_total/length(low_25))
for (i in 1:length(low_25)){
reclassmat=matrix(c(low_25[i], 100, low_25[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Taita_Chyulu)
plot(Chyulu2, axes=F, box=F, legend=F)
#writeRaster(Chyulu2, paste0("Chyulu_25_", low_25[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_25_", low_25[i], ".map"))
}
for (i in 1:length(low_25)){
reclassmat=matrix(c(low_25[i], 100, low_25[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Historic_Taita)
plot(Chyulu2, axes=F, box=F, legend=F)
jpeg()
#writeRaster(Chyulu2, paste0("Chyulu_25_", low_25[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_25_", low_25[i], ".map"))
}
for (i in 1:length(low_25)){
reclassmat=matrix(c(low_25[i], 100, low_25[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Historic_Taita)
plot(Chyulu2, axes=F, box=F, legend=F)
#writeRaster(Chyulu2, paste0("Chyulu_25_", low_25[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_25_", low_25[i], ".map"))
}
simlength_25
low_25
length(low_25)
par(mfrow=c(5,4), mar=c(1, 0, 0, 0))
for (i in 1:length(low_10)){
reclassmat=matrix(c(low_10[i], 100, low_10[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Taita_Chyulu)
plot(Chyulu2, axes=F, box=F, legend=F)
#writeRaster(Chyulu2, paste0("Chyulu_10_", low_10[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_10_", low_10[i], ".map"))
}
for (i in 1:length(low_25)){
reclassmat=matrix(c(low_25[i], 100, low_25[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Historic_Taita)
plot(Chyulu2, axes=F, box=F, legend=F)
writeRaster(Chyulu2, paste0("Chyulu_25_", low_25[i], ".tif"), overwrite=T)
convertMap(Chyulu2, run_length = simlength_10, out=paste0("Chyulu_25_", low_25[i], ".map"))
}
for (i in 1:length(low_25)){
reclassmat=matrix(c(low_25[i], 100, low_25[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Historic_Taita)
plot(Chyulu2, axes=F, box=F, legend=F)
writeRaster(Chyulu2, paste0("Chyulu_25_", low_25[i], ".tif"), overwrite=T)
convertMap(Chyulu2, run_length = simlength_25, out=paste0("Chyulu_25_", low_25[i], ".map"))
}
par(mfrow=c(1,3), mar=c(1, 0, 0, 0))
for (i in 1:length(low_25)){
reclassmat=matrix(c(low_25[i], 100, low_25[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Historic_Taita)
plot(Chyulu2, axes=F, box=F, legend=F)
#writeRaster(Chyulu2, paste0("Chyulu_25_", low_25[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_25, out=paste0("Chyulu_25_", low_25[i], ".map"))
}
Historic_reclassmat=matrix(c(20, 30, 40, 30, 65, 80, 65, 100, 100), ncol=3, byrow=T)
Historic_Taita= reclassify(Taita_Chyulu, Historic_reclassmat)
plot(Historic_Taita)
Historic_reclassmat=matrix(c(15, 30, 500, 30, 65, 80, 65, 100, 100), ncol=3, byrow=T)
Historic_Taita= reclassify(Taita_Chyulu, Historic_reclassmat)
plot(Historic_Taita)
Historic_reclassmat=matrix(c(15, 30, 50, 30, 65, 80, 65, 100, 100), ncol=3, byrow=T)
Historic_Taita= reclassify(Taita_Chyulu, Historic_reclassmat)
plot(Historic_Taita)
Historic_reclassmat=matrix(c(15, 30, 55, 30, 65, 80, 65, 100, 100), ncol=3, byrow=T)
Historic_Taita= reclassify(Taita_Chyulu, Historic_reclassmat)
plot(Historic_Taita)
par(mfrow=c(6,5), mar=c(1, 0, 0, 0))
for (i in 1:length(low_25)){
reclassmat=matrix(c(low_25[i], 100, low_25[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Historic_Taita)
plot(Chyulu2, axes=F, box=F, legend=F)
#writeRaster(Chyulu2, paste0("Chyulu_25_", low_25[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_25, out=paste0("Chyulu_25_", low_25[i], ".map"))
}
par(mfrow=c(5,6), mar=c(1, 0, 0, 0))
for (i in 1:length(low_25)){
reclassmat=matrix(c(low_25[i], 100, low_25[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Historic_Taita)
plot(Chyulu2, axes=F, box=F, legend=F)
#writeRaster(Chyulu2, paste0("Chyulu_25_", low_25[i], ".tif"), overwrite=T)
#convertMap(Chyulu2, run_length = simlength_25, out=paste0("Chyulu_25_", low_25[i], ".map"))
}
for (i in 1:length(low_25)){
reclassmat=matrix(c(low_25[i], 100, low_25[i]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Historic_Taita)
plot(Chyulu2, axes=F, box=F, legend=F)
writeRaster(Chyulu2, paste0("Chyulu_25_", low_25[i], ".tif"), overwrite=T)
convertMap(Chyulu2, run_length = simlength_25, out=paste0("Chyulu_25_", low_25[i], ".map"))
}
par(mfrow=c(1,1), mar=c(1, 0, 0, 0))
plot(Chyulu2, axes=F, box=F, legend=F)
plot(Chyulu2, axes=F, box=F, legend=T)
reclassmat=matrix(c(low_10[1], 100, low_10[1]), ncol=3, byrow=T)
reclassmat=matrix(c(low_25[1], 100, low_25[1]), ncol=3, byrow=T)
Chyulu2=reclassify(Chyulu, reclassmat)
Chyulu2=merge(Chyulu2, Historic_Taita)
plot(Chyulu2, axes=F, box=F, legend=T)
library(raster)
library(rgdal)
library(tidyverse)
library(rasterVis)
FinalMap=raster("Chyuluy_25/Chyulu_25_75.tif")
setwd("/home/charlotte/Zosterops/GranuleSouthKenya_Maps/Chyulu_25")
FinalMap=raster("Chyulu_25_75.tif")
plot(FinalMap)
capacity=round(K* (Chyulu2/100))
K=100
capacity=round(K* (Chyulu2/100))
capacity=round(K* (FinalMap/100))
plot(capacity)
cellStats(capacity,sum)
FirstMap=raster("Chyulu_25_2.5.tif")
plot(FirstMap)
capacity_end=round(K* (FinalMap/100))
capacity_start=round(K* (FirstMap/100))
plot(capacity_start)
cellStats(capacity_start,sum)
42797*200000
(42797*200000)/24
(42797*200000)
40000000/42797
200000/934.645
213/24
capacity_end=round(K* (FinalMap/100))+1
cellStats(capacity_end,sum)
